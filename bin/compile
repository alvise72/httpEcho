#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# create pom.xml if doesn't exist
if [ ! -f ${BUILD_DIR}/pom.xml ]; then

cat <<EOF > ${BUILD_DIR}/pom.xml
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mycompany.app</groupId>
  <artifactId>my-app</artifactId>
  <version>1</version>
</project>
EOF

fi

# call java buildpack

echo "=====> Downloading Java Buildpack"

BUILDPACK_JAVA_DIR=$(mktemp -t buildpackjavaXXXXX)
rm -rf $BUILDPACK_JAVA_DIR
BUILDPACK_JAVA_URL=https://github.com/heroku/heroku-buildpack-java/archive/master.tar.gz

mkdir -p "$BUILDPACK_JAVA_DIR"
curl -s "$BUILDPACK_JAVA_URL" | tar xvz -C "$BUILDPACK_JAVA_DIR" >/dev/null 2>&1
cd $dir

# we'll get errors later if these don't exist
chmod -f +x $BUILDPACK_JAVA_DIR/bin/{detect,compile,release} || true


$BUILDPACK_JAVA_DIR/bin/compile $1 $2 $3

if [ $? != 0 ]; then
  exit 1
fi

if [ -x $BUILDPACK_JAVA_DIR/bin/release ]; then
  $BUILDPACK_JAVA_DIR/bin/release $1 > $1/java_pack_release.out
fi


# change to build dir
cd $BUILD_DIR

# 
TOMCAT_URL="http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.42/bin/apache-tomcat-7.0.42.tar.gz"
curl --location $TOMCAT_URL | tar xzv

ALFRESCO_URL="http://dl.alfresco.com/release/community/4.2.f-build-00012/alfresco-community-4.2.f.zip"
curl --location $ALFRESCO_URL | unzip